)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw()
p
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank()
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "white")
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent")
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
guides(colour = guide_legend(title.position = "top"))
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
guides(colour = guide_legend(title.position = "top")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom",
legend.direction = "horizontal",
legend.box = "horizontal"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)+
guides(color = guide_legend(title.position = "top",
title.hjust = 0.5))
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Greys") +
guides(fill = guide_legend(title = "Regional richness", title.position = "top"))
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Blues") +
guides(fill = guide_legend(title = "Marine richness", title.position = "top"))
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Greys") +
guides(fill = guide_legend(title = "Regional richness", title.position = "top")) +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Blues") +
guides(fill = guide_legend(title = "Marine richness", title.position = "top"))
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Greys") +
guides(fill = guide_legend(title = "Regional richness", title.position = "top")) +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller(type = "seq",
direction = 1,
palette = "Blues") +
guides(fill = guide_legend(title = "Marine richness", title.position = "top")) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
guides(fill = guide_legend(title.position = "top")) +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
guides(fill = guide_legend(title.position = "top")) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
guides(fill = guide_legend(title.position = "top")) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
it
it <- st_read("/Volumes/PHILIPS UFD/map_biogeographia_rotifers/Italy/Italy.shp")
it
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
geom_sf(data = sea, colour = "black") +
geom_text(aes(label = COD_REG, x = Longitude, y = Latitude)) + #add labels at centroids
theme_bw()
p2
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
geom_sf(data = sea, colour = "black") +
geom_text(aes(label = COD_REG)) + #add labels at centroids
theme_bw()
p2
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
geom_sf(data = sea, colour = "black") +
geom_text(aes(label = it$COD_REG)) + #add labels at centroids
theme_bw()
p2
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = states, aes(label = COD_REG), size = 5)
theme_bw()
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = states, aes(label = COD_REG), size = 5) +
theme_bw()
p2 <- ggplot() +
geom_sf(data = it, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = it, aes(label = COD_REG), size = 5) +
theme_bw()
p2
it.1 <- cbind(it, st_coordinates(st_centroid(it)))
it.1
p2 <- ggplot() +
geom_sf(data = it.1, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = it.1, aes(X, Y, label = COD_REG), size = 5) +
theme_bw()
p2
p2 <- ggplot() +
geom_sf(data = it.1, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = it.1, aes(X, Y, label = COD_REG), size = 1) +
theme_bw()
p2
p2 <- ggplot() +
geom_sf(data = it.1, colour = "black") +
#geom_sf(data = sea, colour = "black") +
geom_text(data = it.1, aes(X, Y, label = COD_REG), size = 3) +
theme_bw()
shiny::runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
it <- st_read("/Volumes/PHILIPS UFD/Map_biogeographia_shiny/Italy/Italy_complete.shp")
sea <- st_read("/Volumes/PHILIPS UFD/Map_biogeographia_shiny/bio_sea/bio_sea_4326.shp")
# Terrestial dataframe ----
ter.df <- as.data.frame(t(data.frame(R1 = 198, # Piemonte
R2 = 0, # Valle d'Aosta
R3 = 185, # Lombardia
R4 = 67, # Trentino-Alto Adige
R5 = 40, # Veneto
R6 = 17, # Friuli-Venezia Giulia
R7 = 7, # Liguria
R8 = 188, # Emilia-Romagna
R9 = 34, # Toscana
R10 = 97, # Umbria
R11 = 0, # Marche
R12 = 50, # Lazio
R13 = 0, # Abruzzo
R14 = 0, # Molise
R15 = 5, # Campania
R16 = 11, # Puglia
R17 = 0, # Basilicata
R18 = 5, # Calabria
R19 = 31, # Sicilia
R20 = 86, # Sardegna
R21 = 0, # Vatican City
R22 = 0 # San Marino
)))
colnames(ter.df) <- "richness"
ter.df$ID <- rownames(ter.df)
it <- merge(it, ter.df, by = "ID") # Merge shapefile with richness data
# Marine Dataframe ----
mar.df <- as.data.frame(t(data.frame(M1 = 5, # Sector 1
M2 = 58, # Sector 2
M3 = 5, # Sector 3
M4 = 3, # Sector 4
M5 = 1, # Sector 5
M6 = 10, # Sector 6
M7 = 8, # Sector 7
M8 = 11, # Sector 8
M9 = 45 # Sector 9
)))
colnames(mar.df) <- "richness"
mar.df$ID <- rownames(mar.df)
sea <- merge(sea, mar.df, by = "ID") # Merge shapefile with richness data
p1 <- ggplot() +
geom_sf(data = it, aes(fill = richness), colour = "black") +
scale_fill_distiller("Regional richness", type = "seq",
direction = 1,
palette = "Greys") +
new_scale("fill") +
geom_sf(data = sea, aes(fill = richness), colour = "black") +
scale_fill_distiller("Marine richness", type = "seq",
direction = 1,
palette = "Blues") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "transparent"),
legend.position="bottom"
)
p1
pdf("./Desktop/prova.pdf", paper = "a4")
p1
dev.off()
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
runApp('Desktop/FaunaMap')
library(leaflet)
leaflet(it)
sid74_map <- leaflet() %>%
addTiles(group = "OSM") %>%
addProviderTiles("CartoDB", group = "CartoDB") %>%
addProviderTiles("Esri.WorldImagery", group = "Esri.WorldImagery") %>%
addFeatures(it,
color = richness,
layerId = ~seq_len(length(st_geometry(it))))
leaflet(it) %>%
addTiles(group = "OSM") %>%
addProviderTiles("CartoDB", group = "CartoDB") %>%
addProviderTiles("Esri.WorldImagery", group = "Esri.WorldImagery")
it
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", richness)(richness),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = (richness),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = (it$richness),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fill = it$richness,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
it$richness
leaflet(it) %>%
addPolygons(weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fill = it$richness,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(it) %>%
addPolygons(weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = it$richness,
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
library(RColorBrewer)
# Create a leaflet map
factpal=colorFactor(brewer.pal(n = 11, name ="Spectral") , amsterdam.districts$SDNUMMER)
# Create a leaflet map
factpal=colorFactor(brewer.pal(n = 11, name ="Spectral") , it$richness)
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fill = ~factpal(it$richness),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
factpal
# Create a leaflet map
pal <- colorNumeric("viridis", pal_val)
# Create a leaflet map
pal_val <- it$richness
pal <- colorNumeric("viridis", pal_val)
leaflet(it) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fill = ~pal(pal_val),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
shiny::runApp('Desktop/BiomappeR')
runApp('Desktop/BiomappeR')
